version: "3.9"

volumes:
  postgres-data:
  opnform_storage:
  redis-data:

services:
  db:
    image: postgres:16
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 10

  redis:
    image: redis:7-alpine
    command: ["redis-server", "--appendonly", "yes", "--requirepass", "${REDIS_PASSWORD}"]
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "PING"]
      interval: 10s
      timeout: 5s
      retries: 10

  api:
    image: jhumanj/opnform-api:latest
    env_file:
      - ./api/.env
    environment:
      DB_HOST: db
      DB_CONNECTION: pgsql
      DB_DATABASE: ${DB_DATABASE}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      REDIS_HOST: redis
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      PHP_MEMORY_LIMIT: "1024M"
      PHP_MAX_EXECUTION_TIME: "600"
      PHP_UPLOAD_MAX_FILESIZE: "64M"
      PHP_POST_MAX_SIZE: "64M"
    volumes:
      - opnform_storage:/usr/share/nginx/html/storage:rw
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "php /usr/share/nginx/html/artisan about || exit 1"]
      interval: 30s
      timeout: 15s
      retries: 5
      start_period: 60s

  api-worker:
    image: jhumanj/opnform-api:latest
    command: ["php", "artisan", "queue:work"]
    env_file:
      - ./api/.env
    environment:
      DB_HOST: db
      DB_CONNECTION: pgsql
      DB_DATABASE: ${DB_DATABASE}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      REDIS_HOST: redis
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    volumes:
      - opnform_storage:/usr/share/nginx/html/storage:rw
    depends_on:
      api:
        condition: service_started
    healthcheck:
      test: ["CMD-SHELL", "pgrep -f 'php artisan queue:work' > /dev/null || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  api-scheduler:
    image: jhumanj/opnform-api:latest
    command: ["php", "artisan", "schedule:work"]
    env_file:
      - ./api/.env
    environment:
      DB_HOST: db
      DB_CONNECTION: pgsql
      DB_DATABASE: ${DB_DATABASE}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      REDIS_HOST: redis
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    volumes:
      - opnform_storage:/usr/share/nginx/html/storage:rw
    depends_on:
      api:
        condition: service_started
    healthcheck:
      test: ["CMD-SHELL", "php /usr/share/nginx/html/artisan app:scheduler-status --mode=check --max-minutes=3 || exit 1"]
      interval: 60s
      timeout: 30s
      retries: 5
      start_period: 70s

  ui:
    image: jhumanj/opnform-client:latest
    env_file:
      - ./client/.env
    healthcheck:
      test: ["CMD-SHELL", "wget --spider -q http://localhost:3000/login || exit 1"]
    depends_on:
      api:
        condition: service_started

  ingress:
    image: nginx:1.25-alpine
    container_name: opnform-ingress
    environment:
      NGINX_MAX_BODY_SIZE: 64m
    volumes:
      - ./docker:/etc/nginx/templates:ro
      - opnform_storage:/usr/share/nginx/html/storage:ro
    depends_on:
      ui:
        condition: service_started
      api:
        condition: service_started
    healthcheck:
      test: ["CMD-SHELL", "nginx -t && wget -qO- http://localhost/ >/dev/null 2>&1 || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 10s
